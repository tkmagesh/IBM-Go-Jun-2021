Magesh Kuppan

Schedule
Commence    : 9:30 
Tea break   : 11:30 (20 mins)
Lunch Break : 13:00 (1 hr)
Commence    : 14:00
Tea Break   : 15:30 (20 mins)
Wind up     : 17:30

Name
Experience
Primary Skillset
Experience in Go (if any)
Any book you read recently / Any shows or movies you watched recently ( it has be interesting)


Not a nice man to know (B)
Designing Data Intensive Applications (B)
Cinnoman Gardens (B)

Expanse (V) (Prime)
777 Charlie (V)
Schitt's Creek (V)
The Last World (V)


C
C++
Python
Ruby (1993)
JavaScript (1995)
Java (1995)
C# (1998)
Golang (2008)

The Paradox of Choice (Barry Schwartz) (TED )

Why?
    Performance (Runtime)
    Easy to learn
    Community Support
    Concurrency friendly (better performance, better memory footprint)

    Simplicity
        - 25 keywords
        - package, import, var, func, return, if, for, switch, select, range, chan, close, defer, go, type, interface, struct, make
        - NO list
            no classes
            no inheritance (prefer composition over inheritance)
            no access modifiers
            no generics
            no exceptions  (only errors)
            no try catch finally
            no function overloading

    Built for concurrency
        Concurrency features are built in the language
            go, chan (built in DATA TYPE), range, select 
        Builtin Scheduler 
        1000s of goroutines using 1 thread (extremely memory effiencient when compared the traditional multi threading techniques)

golang.org

go version
Visual Studio Code / goland (licensed)
http://code.visualstudio.com

Data Types in Go

    bool
    string

    int
    int8
    int16
    int32
    int64

    uint
    unit8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real float32, imaginary float32)
    complex128 (real float64, imaginary float64)

    byte (alias for unit8)
    rune (alias for int32, represents 1 unicode character)

    complex types
    =============
        Array
        Slice
        Map

Assignment : 1
    Write program that prints the first 10 prime number from 2


Higher Order Functions
    Functions as data
    1. Functions can be assigned to variables
    2. Functions can be passed as arguments to other functions


Modularity 
    Modules & Packages

    Before Go 1.13
        The Application code has to be in a particular folder
        GOPATH
            bin
            pkg
            src
                github.com
                    tkmagesh
                        ibm-go-jun-2021
    
    GOROOT
        go tool binaries
    GOPATH

    go.mod (like package.json in javascript applications)
        module name
        go version
        other third party modules

    to create a module file run the following command
        go mod init modularity-demo

    to install a third party package
        go get github.com/fatih/color

    to update an existing dependency
        go get -u github.com/fatih/color

    to create a build
        go build
        go build -o <binary_name>

    to get the list of build tool chains of different OS and Architecture
        go tool dist list

    cross compilation of the application
        GOOS=windows go build


TODO:
    implement the data structures in golang (stack, queue, linked list, doubly linked list, trees)


IO operations
    io
        foundational types (like Reader, Writer, Seeker)
    iouitls
        high level apis 
    os
        manipulate files & directories
    bufio
        buffered io & for manipulating textual data


gRPC
    Application to Application communication

    .NET
        .NET Remoting
            binary
    Java
        RMI

    Web
        IP
        TCP
        HTTP
        XML
    Web Services
        SOAP (Simple Object Access Protocol) - XML Vocabulary for representing request & response formats
        WSDL (Web Service Description Language) - XML Vocabulary

    REST (Respresentational State Transfer)
        Data as a Resource
            What data ? - URL
                http://myApp.com/products    
            What operation ?
                http verbs GET, POST, PUT, PATCH, DELETE, HEAD
            Status of requested operation
                http status codes 200, 201, 302, 403, 404, 500
            JSON

    HTTP overheads
        Stateless protocol
        Text
        ONLY frequent polling to get realtime data

    IT DEPENDS

Product Master
    Read Only
    Read Optimized

Reviews
    Read Write
    Mostly Read / Rarely Write

Customers who bought this item also bought
    Analytical 

Delivery
    Realtime


RDBMS
    Integrity of the data (transactional)


gRPC
    Language agnostic
    protocol buffers
        binary
    tcp
    communication patterns
        request response
        client streaming
        server streaming
        bidirectional streaming

Toos for gRPC
    go get -u github.com/golang/protobuf/protoc-gen-go
    go get -u google.golang.org/grpc


to generate the proxy
    protoc ./proto/service.proto --go_out=plugins=grpc:.

    For go 1.16
    protoc --go_out=. --go_opt=paths=source_relative \ --go-grpc_out=. --go-grpc_opt=paths=source_relative \ proto/service.proto

Troubleshoot generating proto proxy
    export PATH="$PATH:$(go env GOPATH)/bin"
    go get -u github.com/golang/protobuf/{proto,protoc-gen-go}
    go get -u google.golang.org/grpc@latest